name: Build

on:
  push: ~
  release:
    types: [created]
  schedule:
    -
      cron: "0 1 * * 6" # Run at 1am every Saturday

jobs:
  tests:
    runs-on: ubuntu-latest

    name: "PHP ${{ matrix.php }}, MySQL ${{ matrix.mysql }}"

    strategy:
      fail-fast: false
      matrix:
        php: [7.4, 7.3]
        node: [10.x]
        mysql: [5.7, 8.0]

        exclude:
          - # PHP 7.3 does not support "caching_sha2_password" authentication plugin which is a default one in MySQL 8.0
            php: 7.3
            mysql: 8.0

    env:
      APP_ENV: test
      DATABASE_URL: "mysql://root:root@127.0.0.1/sylius?serverVersion=${{ matrix.mysql }}"

    steps:
      -
        uses: actions/checkout@v2

      -
        name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "${{ matrix.php }}"
          ini-values: date.timezone=Europe/Warsaw, opcache.enable=1, opcache.enable_cli=1, opcache.memory_consumption=256, opcache.max_accelerated_files=32531, opcache.interned_strings_buffer=8, opcache.validate_timestamps=0, opcache.save_comments=1, opcache.fast_shutdown=0
          extensions: intl, gd, opcache, mysql, pdo_mysql, :xdebug
          tools: symfony
          coverage: none

      -
        name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: "${{ matrix.node }}"

      -
        name: Shutdown default MySQL
        run: sudo service mysql stop

      -
        name: Setup MySQL
        uses: mirromutth/mysql-action@v1.1
        with:
          mysql version: "${{ matrix.mysql }}"
          mysql root password: "root"

      -
        name: Output PHP version for Symfony CLI
        run: php -v | head -n 1 | awk '{ print $2 }' > .php-version

      -
        name: Install certificates
        run: symfony server:ca:install

      -
        name: Run Chrome Headless
        run: google-chrome-stable --enable-automation --disable-background-networking --no-default-browser-check --no-first-run --disable-popup-blocking --disable-default-apps --allow-insecure-localhost --disable-translate --disable-extensions --disable-web-security --no-sandbox --enable-features=Metal --headless --remote-debugging-port=9222 --window-size=2880,1800 --proxy-server='direct://' --proxy-bypass-list='*' http://127.0.0.1 > /dev/null 2>&1 &

      -
        name: Run webserver
        run: (cd tests/Application && symfony server:start --port=8080 --dir=public --daemon)

      -
        name: Get Composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      -
        name: Cache Composer
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-php-${{ matrix.php }}-composer-${{ hashFiles('**/composer.json **/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-${{ matrix.php }}-composer-
      -
        name: Install PHP dependencies
        run: composer install --no-interaction

      -
        name: Get Yarn cache directory
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"

      -
        name: Cache Yarn
        uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-node-${{ matrix.node }}-yarn-${{ hashFiles('**/package.json **/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ matrix.node }}-yarn-
      -
        name: Install JS dependencies
        run: (cd tests/Application && yarn install)

      -
        name: Prepare test application database
        run: |
          (cd tests/Application && bin/console doctrine:database:create -vvv)
          (cd tests/Application && bin/console doctrine:schema:create -vvv)

      -
        name: Prepare test application assets
        run: |
          (cd tests/Application && bin/console assets:install public -vvv)
          (cd tests/Application && yarn build)
      -
        name: Prepare test application cache
        run: (cd tests/Application && bin/console cache:warmup -vvv)

      -
        name: Load fixtures in test application
        run: (cd tests/Application && bin/console sylius:fixtures:load -n)

      -
        name: Validate composer.json
        run: composer validate --ansi --strict

      -
        name: Validate database schema
        run: (cd tests/Application && bin/console doctrine:schema:validate)

      -
        name: Run PHPSpec
        run: vendor/bin/phpspec run --ansi -f progress --no-interaction

      -
        name: Run PHPUnit
        run: vendor/bin/phpunit --colors=always

      -
        name: Run Behat
        run: vendor/bin/behat --colors --strict -vvv --no-interaction || vendor/bin/behat --colors --strict -vvv --no-interaction --rerun

      -
        name: Upload Behat logs
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: Behat logs
          path: etc/build/
          if-no-files-found: ignore
