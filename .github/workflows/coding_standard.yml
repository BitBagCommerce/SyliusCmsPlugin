name: Coding standard

on:
    pull_request: ~
    release:
        types: [created]
    workflow_dispatch: ~

jobs:
    tests:
        runs-on: ubuntu-latest

        name: "Sylius ${{ matrix.sylius }}, PHP ${{ matrix.php }}, Symfony ${{ matrix.symfony }}, MySQL ${{ matrix.mysql }}"

        strategy:
            fail-fast: false
            matrix:
                php: ["8.1", "8.2", "8.3"]
                symfony: ["^5.4", "^6.4"]
                sylius: ["^1.12", "^1.13"]
                node: ["18.x", "20.x"]

        steps:
            -
                uses: actions/checkout@v2
            -
                name: Setup PHP
                uses: shivammathur/setup-php@v2
                with:
                    php-version: "${{ matrix.php }}"
                    extensions: intl
                    tools: symfony
                    coverage: none
            -
                name: Get Composer cache directory
                id: composer-cache
                run: echo "::set-output name=dir::$(composer config cache-files-dir)"

            -
                name: Cache Composer
                uses: actions/cache@v2
                with:
                    path: ${{ steps.composer-cache.outputs.dir }}
                    key: ${{ runner.os }}-php-${{ matrix.php }}-composer-${{ hashFiles('**/composer.json **/composer.lock') }}
                    restore-keys: |
                        ${{ runner.os }}-php-${{ matrix.php }}-composer-
            -
                name: Restrict Symfony version
                if: matrix.symfony != ''
                run: |
                    composer global config --no-plugins allow-plugins.symfony/flex true
                    composer global require --no-progress --no-scripts --no-plugins "symfony/flex:^1.10"
                    composer config extra.symfony.require "${{ matrix.symfony }}"
            -
                name: Restrict Sylius version
                if: matrix.sylius != ''
                run: composer require "sylius/sylius:${{ matrix.sylius }}" --no-update --no-scripts --no-interaction

            -
                name: Install PHP dependencies
                run: composer install --no-interaction

            -
                name: Run PHPStan
                run: vendor/bin/phpstan analyse -c phpstan.neon -l 8 src/

            -
                name: Run ECS
                run: vendor/bin/ecs check src/

            -
                name: Failed build Slack notification
                uses: rtCamp/action-slack-notify@v2
                if: ${{ failure() && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master') }}
                env:
                    SLACK_CHANNEL: ${{ secrets.FAILED_BUILD_SLACK_CHANNEL }}
                    SLACK_COLOR: ${{ job.status }}
                    SLACK_ICON: https://github.com/rtCamp.png?size=48
                    SLACK_MESSAGE: ':x:'
                    SLACK_TITLE: Failed build on ${{ github.event.repository.name }} repository
                    SLACK_USERNAME: ${{ secrets.FAILED_BUILD_SLACK_USERNAME }}
                    SLACK_WEBHOOK: ${{ secrets.FAILED_BUILD_SLACK_WEBHOOK }}